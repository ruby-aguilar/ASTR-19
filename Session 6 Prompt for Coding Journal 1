{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "eba8e9e7-9e28-4724-8b5d-f7145dd83c04",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "07dcfee9-ba2d-4c14-87da-18773e602da8",
   "metadata": {},
   "source": [
    "this function returns sin(x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "90287f48-0e78-401e-a6d4-aaedc1d2889f",
   "metadata": {},
   "outputs": [],
   "source": [
    "def sin(x):\n",
    "    sin_x = np.sin(x)\n",
    "    return(sin_x)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0d7798fb-48e5-458b-84f1-dee817b7d4d2",
   "metadata": {},
   "source": [
    "this function returns cos(x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6b31c284-0d09-45f4-99b6-af57a3690906",
   "metadata": {},
   "outputs": [],
   "source": [
    "def cos(x):\n",
    "    cos_x = np.cos(x)\n",
    "    return(cos_x)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a5abba61-4686-4b24-8a25-cdbe7bcdec1b",
   "metadata": {},
   "source": [
    "this cell gives us 1000 x values between 0 and 2pi, and then the cosine and sine values of each x value"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0ae3b0eb-327f-4057-b4a1-f6623551fc21",
   "metadata": {},
   "outputs": [],
   "source": [
    "x_values = np.linspace(0, 2*np.pi, 1000)\n",
    "sin_values = sin(x_values)\n",
    "cos_values = cos(x_values)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8aa786de-fd02-4399-a3af-3236ba5b97f8",
   "metadata": {},
   "source": [
    "this cell prints out a table of the first 10 x values and their coresponding sine and cosine values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "246d009f-b8d9-49b6-ad04-c0f9ee8693c9",
   "metadata": {},
   "outputs": [],
   "source": [
    "print(f\"{'x':^9} {'|'} {'sin(x)':^9} {'|'} {'cos(x)':^9}\")\n",
    "print('-' * 34)\n",
    "\n",
    "for i in range(10):\n",
    "  print(f\"{x_values[i]:^9f} {'|'} {sin_values[i]:^9f} {'|'} {cos_values[i]:^9f}\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "ASTR 19",
   "language": "python",
   "name": "astr19"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
